// Produce RadiationShielding via EpL or Blacksmith
// A non-transferable resource resembling polyethylene (C2H4)

// EpL:

EL_ResourceRecipe:NEEDS[ExtraplanetaryLaunchpads,KerbalHealth]
{
  name = RadiationShielding
  Resources
  {
    Carbon = 24.022
    Hydrogen = 4.032
  }
}

// Blacksmith:

@PART:HAS[@RESOURCE[RadiationShielding]:HAS[#maxAmount[>0]]]:NEEDS[RRBlacksmith,KerbalHealth]:AFTER[KerbalHealth]
{
	@description ^= :$: <br><color="green">Shielding producible in-situ via Blacksmith.</color>
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Install Radiation Shielding
		StartActionName = Start Rad Shielding Production
		StopActionName = Stop Rad Shielding Production
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = RRWork
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 0.1
			FlowMode = ALL_VESSEL
		}
    INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.06931767645
			FlowMode = STAGE_PRIORITY_FLOW
		}
    INPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 271.77841431347
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RadiationShielding
			Ratio = 0.0017 // Same mass rate as Blacksmith Ablator
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
}

@PART:HAS[@RESOURCE[RadiationShielding]:HAS[#maxAmount[>1]]]:NEEDS[RRBlacksmith,KerbalHealth]:AFTER[KerbalHealth]
{
	@MODULE:HAS[#ConverterName[Install?Radiation?Shielding]]
	{
		@INPUT_RESOURCE,*
		{
			@Ratio *= #$../../RESOURCE[RadiationShielding]/maxAmount$
		}
		@OUTPUT_RESOURCE
		{
			@Ratio *= #$../../RESOURCE[RadiationShielding]/maxAmount$
		}
	}
}
