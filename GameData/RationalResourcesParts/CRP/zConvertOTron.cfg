// Adjust CoreHeat in Convert-O-Trons
@PART[MiniISRU,ISRU]:NEEDS[!Kerbalism]
{
	@MODULE[ModuleCoreHeat]
	{
		@CoreTempGoal = 1000
		@CoreShutdownTemp = 4000
		@MaxCoolant = 200
	}
	
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@TemperatureModifier
		{
			!key,* = nope
			key = 0 100000
			key = 750 50000
			key = 1000 10000
			key = 1250 500
			key = 2000 50
			key = 4000 0
		}				
		@ThermalEfficiency 
		{
			!key,* = nope
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@Ratio = 0.5
		}
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]
		{
			@Ratio = 30
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.45
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.55
			@DumpExcess = True
		}
	}
}

// Populate all Convert-O-Trons
@PART[MiniISRU,ISRU,rr_boxblue_long,rr_boxblue]:NEEDS[!Kerbalism]
{
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = LqdAmmonia
		@StartActionName = Start ISRU [LqdAmmonia]
		@StopActionName = Stop ISRU [LqdAmmonia]
		@ToggleActionName = Toggle ISRU [LqdAmmonia]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.85 // 3
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.34 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdAmmonia
			@Ratio = 0.24 // 10
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Kerolox
		@StartActionName = Start ISRU [Kerolox]
		@StopActionName = Stop ISRU [Kerolox]
		@ToggleActionName = Toggle ISRU [Kerolox]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.37 // 13
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 0.45 // 12
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.034 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.337 // 12
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = MonoPropellant
		@StartActionName = Start ISRU [MonoPropellant A]
		@StopActionName = Stop ISRU [MonoPropellant A]
		@ToggleActionName = Toggle ISRU [MonoPropellant A]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.57 // 20
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.34 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = MonoPropellant
			@Ratio = 0.08 // 10
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = MonoPropellant + Hydrogen
		@StartActionName = Start ISRU [MonoPropellant B]
		@StopActionName = Stop ISRU [MonoPropellant B]
		@ToggleActionName = Toggle ISRU [MonoPropellant B]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdAmmonia
			@Ratio = 0.49 // 20
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = MonoPropellant
			@Ratio = 0.08 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.57 // 10
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Hydrolox
		@StartActionName = Start ISRU [Hydrolox]
		@StopActionName = Stop ISRU [Hydrolox]
		@ToggleActionName = Toggle ISRU [Hydrolox]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Water
			@Ratio = 3.6 // 20
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.56 // 20
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.03 // 10
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Methalox
		@StartActionName = Start ISRU [Methalox]
		@StopActionName = Stop ISRU [Methalox]
		@ToggleActionName = Toggle ISRU [Methalox]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.57 // 20
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 0.38 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdMethane
			@Ratio = 0.38 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.03 // 10
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = CO2 Splitter
		@StartActionName = Start ISRU [CO2 Splitter]
		@StopActionName = Stop ISRU [CO2 Splitter]
		@ToggleActionName = Toggle ISRU [CO2 Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = CarbonDioxide
			@Ratio = 22.558
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Oxygen
			@Ratio = 22.695
		}
		
		// @OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		// {
			// @ResourceName = Carbon
			// @Ratio = 0.002 // 1
			// @DumpExcess = True
		// }
		// Carbon resource not used
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Hydrates Splitter
		@StartActionName = Start ISRU [Hydrates Splitter]
		@StopActionName = Stop ISRU [Hydrates Splitter]
		@ToggleActionName = Toggle ISRU [Hydrates Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Hydrates
			@Ratio = 0.224 // 2
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Water
			@Ratio = 0.18 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = XenonGas
			@Ratio = 5.252 // 2
		}
		+OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]:NEEDS[NearFuturePropulsion]
		{
			@ResourceName = ArgonGas
			@Ratio = 89.57 // 2
		}
		+OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = MetalOre
			@Ratio = 0.018 // 4
		}
		+OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 68.085 // 3
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Alumina Splitter
		@StartActionName = Start ISRU [Alumina Splitter]
		@StopActionName = Stop ISRU [Alumina Splitter]
		@ToggleActionName = Toggle ISRU [Alumina Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Alumina
			@Ratio = 0.224 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Metals
			@Ratio = 0.025 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 68.085 // 3
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Monazite Splitter
		@StartActionName = Start ISRU [Monazite Splitter]
		@StopActionName = Stop ISRU [Monazite Splitter]
		@ToggleActionName = Toggle ISRU [Monazite Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Monazite
			@Ratio = 0.224 // 2
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = RareMetals
			@Ratio = 0.025 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Phosphorus
			@Ratio = 0.06 // 1
		}
		+OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 90.78 // 4
		}
	}
}

// Downscale throughput in small Convert-O-Trons
@PART[rr_boxblue]:NEEDS[!Kerbalism]
{
	@MODULE[ModuleResourceConverter],*
	{
		@INPUT_RESOURCE,*
		{
			@Ratio *= 0.6
		}
		@OUTPUT_RESOURCE,*
		{
			@Ratio *= 0.6
		}
	}
}

@PART[MiniISRU]:NEEDS[!Kerbalism]
{
	@MODULE[ModuleCoreHeat]
	{
		@CoreTempGoal = 1000
		@CoreShutdownTemp = 3000
		@MaxCoolant = 60
	}
	
	@MODULE[ModuleResourceConverter],*
	{
		@TemperatureModifier
		{
			!key,* = nope
			key = 0 25000
			key = 750 6000
			key = 1000 3000
			key = 1500 500
			key = 2000 50
			key = 4000 0
		}
		@INPUT_RESOURCE,*
		{
			@Ratio *= 0.25
		}
		@OUTPUT_RESOURCE,*
		{
			@Ratio *= 0.25
		}
	}
}

// Populate Cryo Prep Converter
@PART[rr_boxblue_flat]
{
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze CarbonDioxide
		@StartActionName = Start Freezer CarbonDioxide
		@StopActionName = Stop Freezer CarbonDioxide
		@ToggleActionName = Toggle Freezer CarbonDioxide
		@INPUT_RESOURCE,0
		{
			@ResourceName = CarbonDioxide
			@Ratio = 225.58
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdCO2
			@Ratio = 0.38
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Hydrogen
		@StartActionName = Start Freezer Hydrogen
		@StopActionName = Stop Freezer Hydrogen
		@ToggleActionName = Toggle Freezer Hydrogen
		@INPUT_RESOURCE,0
		{
			@ResourceName = Hydrogen
			@Ratio = 224.25
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.28
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Methane
		@StartActionName = Start Freezer Methane
		@StopActionName = Stop Freezer Methane
		@ToggleActionName = Toggle Freezer Methane
		@INPUT_RESOURCE,0
		{
			@ResourceName = Methane
			@Ratio = 223.88
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdMethane
			@Ratio = 0.38
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Nitrogen
		@StartActionName = Start Freezer Nitrogen
		@StopActionName = Stop Freezer Nitrogen
		@INPUT_RESOURCE,0
		{
			@ResourceName = Nitrogen
			@Ratio = 223.93
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdNitrogen
			@Ratio = 0.34
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Oxidizer
		@StartActionName = Start Freezer Oxidizer
		@StopActionName = Stop Freezer Oxidizer
		@ToggleActionName = Toggle Freezer Oxidizer
		@INPUT_RESOURCE,0
		{
			@ResourceName = Oxygen
			@Ratio = 226.95
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = Oxidizer
			@Ratio = 0.28
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Oxygen
		@StartActionName = Start Freezer Oxygen
		@StopActionName = Stop Freezer Oxygen
		@ToggleActionName = Toggle Freezer Oxygen
		@INPUT_RESOURCE,0
		{
			@ResourceName = Oxygen
			@Ratio = 226.95
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdOxygen
			@Ratio = 0.28
		}
	}
}

@PART[ISRU,MiniISRU]:AFTER[SimpleConstruction]:NEEDS[!Kerbalism]
{
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[Metal]]
	{
		@INPUT_RESOURCE,0
		{
			@ResourceName = MetalOre
		}
	}
}

// Ablator refill facility for science labs
@PART:HAS[@MODULE[ModuleAblator]:HAS[#ablativeResource[Ablator]]]
{
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Refill Ablator
		StartActionName = Start Refill Ablator
		StopActionName = Stop Refill Ablator
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = RRWork // simulates EVA work
			Ratio = 0.2
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.165
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ablator // does not crossfeed so heatshield needs to emulate EVA work
			Ratio = 0.165
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
}

@PART:HAS[@MODULE[ModuleScienceLab]]
{
	MODULE
	{
		name = ModuleOverheatDisplay
	}
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Blacksmith
		StartActionName = Start Blacksmith
		StopActionName = Stop Blacksmith
		AutoShutdown = true
		GeneratesHeat = true
		DefaultShutoffTemp = 0.45
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = EngineerSkill
		EfficiencyBonus = 1
		TemperatureModifier
		{
			key = 300 250 0 0
			key = 600 1140 6.039467 6.039467
			key = 900 2250 -1.147305 -46.264
			key = 905 0 0 0
		}
		ThermalEfficiency
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 900 1.0 0 0
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 20
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RRWork
			Ratio = 0.4
			DumpExcess = True
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 400
		MaxCoolant = 60
		CoreToPartRatio = 0.1
		CoreTempGoalAdjustment = 0
		CoreEnergyMultiplier = 0.1
		HeatRadiantMultiplier = 0.25
		CoolingRadiantMultiplier = 0
		HeatTransferMultiplier = 0
		CoolantTransferMultiplier = 0.01
		radiatorCoolingFactor = 1
		radiatorHeatingFactor = 0.05
		MaxCalculationWarp = 1000
		CoreShutdownTemp = 2000
	}
	MODULE
	{
		name = ModuleB9PartSwitch
		baseVolume = 0.4
		moduleID = Blacksmith
		switcherDescription = Blacksmith Level
		switcherDescriptionPlural = Blacksmith Levels
		// switchInFlight = False
		SUBTYPE
		{
			name = Work1
			title = Level 1
			tankType = RR_Work
			primaryColor = Burgundy
			secondaryColor = BrightOrange
			volumeAdded = 0
			defaultSubtypePriority = 1 // Highest is default
			descriptionDetail = Simulates 2 kerbals working with basic equipment.<br><b>Requires:</b> 20 EC/s + Engineer trait.<br><b>Produces:</b> 0.4 Work.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Blacksmith
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = 20
					}
					OUTPUT_RESOURCE
					{
						ResourceName = RRWork
						Ratio = 0.4
						DumpExcess = True
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
		SUBTYPE
		{
			name = Work2
			title = Level 2
			tankType = RR_Work
			primaryColor = Burgundy
			secondaryColor = BrightOrange
			volumeAdded = 0.4
			defaultSubtypePriority = 2
			// upgradeRequired = 
			// addedMass = 
			// addedCost = 
			descriptionDetail = Simulates 3 kerbals working with improved equipment.<br><b>Requires:</b> 30 EC/s + Engineer trait.<br><b>Produces:</b> 0.8 Work.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Blacksmith
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = 30
					}
					OUTPUT_RESOURCE
					{
						ResourceName = RRWork
						Ratio = 0.8
						DumpExcess = True
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
		SUBTYPE
		{
			name = Work3
			title = Level 3
			tankType = RR_Work
			primaryColor = Burgundy
			secondaryColor = BrightOrange
			volumeAdded = 0.8
			defaultSubtypePriority = 3
			// upgradeRequired = 
			// addedMass = 
			// addedCost = 
			descriptionDetail = Simulates 4 kerbals working with improved equipment.<br><b>Requires:</b> 40 EC/s + Engineer trait.<br><b>Produces:</b> 1.2 Work.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Blacksmith
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = 40
					}
					OUTPUT_RESOURCE
					{
						ResourceName = RRWork
						Ratio = 1.2
						DumpExcess = True
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
	}
}
