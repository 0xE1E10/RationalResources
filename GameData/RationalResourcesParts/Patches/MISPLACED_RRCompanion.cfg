@PART[RRScoopAtm*]:NEEDS[!Pathfinder,!Kerbalism]:BEFORE[RationalResourcesCompanion]
{
	RateNH3 = 22147
	RateCO2 = 22558
	RateCO = 22408
	RateH2 = 22425
	RateCH4 = 22388
	RateN2 = 22393
	RateO2 = 22595
	
	RateLNH3 = 240
	RateLCO2 = 38
	RateLCO = 35.46
	RateLH2 = 28
	RateLCH4 = 38
	RateLN2 = 34
	RateOX = 28
	
	RateEC = 20
	// RateD = 
	// RateHe3 = 
	// RateH2O = 
	
	@RateNH3 *= #$/RRPower$
	@RateCO2 *= #$/RRPower$
	@RateCO *= #$/RRPower$
	@RateCH4 *= #$/RRPower$
	@RateN2 *= #$/RRPower$
	@RateO2 *= #$/RRPower$
	@RateH2 *= #$/RRPower$
	
	@RateLNH3 *= #$/RRPower$
	@RateLCO2 *= #$/RRPower$
	@RateLCO *= #$/RRPower$
	@RateLCH4 *= #$/RRPower$
	@RateLN2 *= #$/RRPower$
	@RateOX *= #$/RRPower$
	@RateLH2 *= #$/RRPower$
	
	@RateEC *= #$/RRPower$
	// @RateD *= #$/RRPower$
	// @RateHe3 *= #$/RRPower$
	// @RateH2O *= #$/RRPower$
	
	MODULE
	{
		name = ModuleResourceHarvester
		HarvesterType = 2
		Efficiency = #$/RRPower$
		ResourceName = Oxygen
		ConverterName = Ram Filter
		StartActionName = Start Ram Filter
		StopActionName = Stop Ram Filter
		ToggleActionName = Toggle Ram Filter
		airSpeedStatic = 5000
		intakeSpeed = 0
		intakeTransformName = intakeTransform
		Tag = RR
		machCurve
		{
			key = 0 0.01 0 0
			key = 0.45 0.6
			key = 2 1 0 0
			key = 3.02 0.95
			key = 9 0.3 0 0
		}
	 	INPUT_RESOURCE
	 	{
			ResourceName = ElectricCharge
			Ratio = 0
	 	}
	}
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Ram Freezer
		StartActionName = Start Ram Freezer
		StopActionName = Stop Ram Freezer
		ToggleActionName = Toggle Ram Freezer
		AutoShutdown = True
		GeneratesHeat = False
		moduleIsEnabled = True
		INPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$/RateO2$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 20
			@Ratio *= #$/RRPower$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = #$/RateOX$
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = False
		}
	}
	
	MODULE:NEEDS[B9PartSwitch]
	{
		name = ModuleB9PartSwitch
		moduleID = RRRamFilter
		switcherDescription = Resource 
		switcherDescriptionPlural = Resource Selections
		switchInFlight = True
		baseVolume = #$/refVolume$
		SUBTYPE
		{
			name = Ammonia
			title = Ammonia
			primaryColor = BurntRed
			secondaryColor = BurntRed
			descriptionDetail = #Changes harvester to Ammonia. <br>Ram Freezer converts $/RateNH3$ Ammonia/sec to $/RateLNH3$ LqdAmmonia/sec.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = Ammonia
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Ammonia
						Ratio = #$/RateNH3$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = LqdAmmonia
						Ratio = #$/RateLNH3$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = False
					}
				}
			}
			RESOURCE
			{
				name = Ammonia
				unitsPerVolume = 100
				percentFilled = 0
			}
			RESOURCE
			{
				name = LqdAmmonia
				unitsPerVolume = 5
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = CarbonDioxide
			title = Carbon Dioxide
			primaryColor = WarmGrey
			secondaryColor = WarmGrey
			descriptionDetail = #Changes harvester to Ammonia. <br>Ram Freezer converts $/RateCO2$ CO2/sec to $/RateLCO2$ LqdCO2/sec.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = CarbonDioxide
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = CarbonDioxide
						Ratio = #$/RateCO2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = LqdCO2
						Ratio = #$/RateLCO2$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = False
					}
				}
			}
			RESOURCE
			{
				name = CarbonDioxide
				unitsPerVolume = 100
				percentFilled = 0
			}
			RESOURCE
			{
				name = LqdCO2
				unitsPerVolume = 5
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = CarbonMonoxide
			title = Carbon Monoxide
			primaryColor = PurpleGrey
			secondaryColor = PurpleGrey
			descriptionDetail = #Changes harvester to Carbon Monoxide. <br>Ram Freezer converts $/RateCO$ CO/sec to $/RateLCO$ LqdCO/sec.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = CarbonMonoxide
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = CarbonMonoxide
						Ratio = #$/RateCO$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = LqdCO
						Ratio = #$/RateLCO$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = False
					}
				}
			}
			RESOURCE
			{
				name = CarbonMonoxide
				unitsPerVolume = 100
				percentFilled = 0
			}
			RESOURCE
			{
				name = LqdCO
				unitsPerVolume = 5
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = Hydrogen
			title = Hydrogen
			primaryColor = ResourceColorLqdHydrogen
			secondaryColor = ResourceColorLqdHydrogen
			descriptionDetail = #Changes harvester to Hydrogen. <br>Ram Freezer converts $/RateCO2$ Hydrogen/sec to $/RateLCO2$ LH2/sec.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = Hydrogen
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Hydrogen
						Ratio = #$/RateH2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = LqdHydrogen
						Ratio = #$/RateLH2$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = False
					}
				}
			}
			RESOURCE
			{
				name = Hydrogen
				unitsPerVolume = 100
				percentFilled = 0
			}
			RESOURCE
			{
				name = LqdHydrogen
				unitsPerVolume = 15
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = Deuterium
			title = Deuterium
			primaryColor = PowderBlue
			secondaryColor = PowderBlue
			descriptionDetail = Changes harvester to LqdDeuterium. <br>Ram Freezer is not required.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = LqdDeuterium
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				moduleActive = False
			}
			RESOURCE
			{
				name = LqdDeuterium
				unitsPerVolume = 5
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = Helium3
			title = LqdHe3
			primaryColor = CloudyBlue
			secondaryColor = CloudyBlue
			descriptionDetail = Changes harvester to LqdHe3. <br>Ram Freezer is not required.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = LqdHe3
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				moduleActive = False
			}
			RESOURCE
			{
				name = LqdHe3
				unitsPerVolume = 15
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = Methane
			title = Methane
			primaryColor = ResourceColorLqdMethane
			secondaryColor = ResourceColorLqdMethane
			descriptionDetail = #Changes harvester to Methane. <br>Ram Freezer converts $/RateCH4$ Methane/sec to $/RateLCH4$ LqdMethane/sec.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = Methane
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Methane
						Ratio = #$/RateCH4$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = LqdMethane
						Ratio = #$/RateLCH4$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = False
					}
				}
			}
			RESOURCE
			{
				name = Methane
				unitsPerVolume = 100
				percentFilled = 0
			}
			RESOURCE
			{
				name = LqdMethane
				unitsPerVolume = 5
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = Nitrogen
			title = Nitrogen
			primaryColor = PeacockBlue
			secondaryColor = PeacockBlue
			descriptionDetail = #Changes harvester to Nitrogen. <br>Ram Freezer converts $/RateN2$ N2/sec to $/RateLN2$ LN2/sec.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = Nitrogen
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Nitrogen
						Ratio = #$/RateN2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = LqdNitrogen
						Ratio = #$/RateLN2$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = False
					}
				}
			}
			RESOURCE
			{
				name = Nitrogen
				unitsPerVolume = 100
				percentFilled = 0
			}
			RESOURCE
			{
				name = LqdNitrogen
				unitsPerVolume = 5
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = Oxygen1
			title = Oxygen to IntakeAir
			primaryColor = CadetBlue
			secondaryColor = ResourceColorOxidizer
			descriptionDetail = #Changes harvester to Oxygen. <br>Ram Freezer converts $/RateO2$ Oxygen/sec to $/RateOX$ IntakeAir/sec.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = Oxygen
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Oxygen
						Ratio = #$/RateO2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = IntakeAir
						Ratio = #$/RateOX$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = False
					}
				}
			}
			RESOURCE
			{
				name = Oxygen
				unitsPerVolume = 100
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = Oxygen2
			title = Oxygen to Oxidizer
			defaultSubtypePriority = 1
			primaryColor = CadetBlue
			secondaryColor = ResourceColorOxidizer
			descriptionDetail = #Changes harvester to Oxygen. <br>Ram Freezer converts $/RateO2$ Oxygen/sec to $/RateOX$ Oxidizer/sec.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = Oxygen
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Oxygen
						Ratio = #$/RateO2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Oxidizer
						Ratio = #$/RateOX$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = False
					}
				}
			}
			RESOURCE
			{
				name = Oxygen
				unitsPerVolume = 100
				percentFilled = 0
			}
			RESOURCE
			{
				name = Oxidizer
				unitsPerVolume = 0.5
				percentFilled = 0
			}
		}
		SUBTYPE
		{
			name = Water
			title = Water
			primaryColor = Ocean
			secondaryColor = Ocean
			descriptionDetail = Changes harvester to Water. <br>Ram Freezer is not required.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceHarvester
					ConverterName = Ram Filter
				}
				DATA
				{
					ResourceName = Water
				}
			}
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Ram Freezer
				}
				moduleActive = False
			}
			RESOURCE
			{
				name = Water
				unitsPerVolume = 5
				percentFilled = 0
			}
		}
	}
}


@PART[RRScoopAtm*]:NEEDS[Pathfinder]
{
	MODULE
	{
		name = WBIModuleResourceHarvester
		ConverterName = Ammonia Filter
		harvestTypes = Atmospheric
		Efficiency = 50
		@Efficiency *= #$/RRPower$
		ResourceName = Ammonia
		StartActionName = Start Ram Filter
		StopActionName = Stop Ram Filter
		ToggleActionName = Toggle Ram Filter
		IsActivated = True
		area = #$/MODULE[ModuleResourceIntake]/area$
		airSpeedStatic = 500
		intakeSpeed = 0
		intakeTransformName = intakeTransform
		DefaultShutoffTemp = 0.8
		machCurve
		{
			key = 0.05 0.001 0 0
			key = 0.7 0.8
			key = 1.4 1 0 0
			key = 3.4 1 0 0
			key = 9 0.3 0 0
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0
		}
	}
	
	MODULE
	{
		name = WBIOmniConverter
		managedName = Freeze Bay
		templateNodes = OMNICONVERTER
		templateTags = rrfz;
		BaseEfficiency = #$/RRPower$
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 100
		@requiredAmount *= #$/RRPower$

		ConverterName = OmniConverter
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = False
		UseSpecialistBonus = True
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = #$/RRPower$

		showOpsView = True
	}
}

@PART[RRScoopAtm*]:NEEDS[!Pathfinder,!Kerbalism]:BEFORE[RationalResourcesCompanion]
{
	!RateNH3 = bye
	!RateCO2 = bye
	!RateCO = bye
	!RateH2 = bye
	!RateCH4 = bye
	!RateN2 = bye
	!RateO2 = bye
	
	!RateLNH3 = bye
	!RateLCO2 = bye
	!RateLCO = bye
	!RateLH2 = bye
	!RateLCH4 = bye
	!RateLN2 = bye
	!RateOX = bye
	
	!RateEC = bye
}