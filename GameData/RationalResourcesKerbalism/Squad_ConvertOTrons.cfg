// Affects Squad's and RR's own Convert-O-Trons

// Preload RR Boxed Convert-O-Trons to match stock ISRU
@PART[rr_boxblue_long,rr_boxblue]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleCoreHeat] {}
	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = #KERBALISM_WaterElectrolysis_title//Water electrolysis
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _Sabatier
		title = #KERBALISM_SabatierProcess_title//Sabatier process
		capacity = 1
		valve_i = 2 // workaround until we have a better way to deal with dump valves
	}
	MODULE
	{
		name = ProcessController
		resource = _Haber
		title = #KERBALISM_HaberProcess_title//Haber process
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _WasteIncinerator
		title = Waste incinerator
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _WasteCompressor
		title = #KERBALISM_WasteCompressor_title//Waste compressor
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _Anthraquinone
		title = #KERBALISM_AnthraquinoneProcess_title//Anthraquinone process
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _HydrazineProduction
		title = #KERBALISM_HydrazineProduction_title//Hydrazine production
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _NitroHydrazine
		title = #KERBALISM_HydrazineProductionN2_title//Hydrazine production N2
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _MRE
		title = #KERBALISM_MoltenRegolithElectrolysis_title//MRE
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _SOE
		title = #KERBALISM_SolidOxideElectrolysis_title//SOE
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _SCO
		title = #KERBALISM_SelectiveCatalyticOxidation_title//SCO
		capacity = 1
	}
	
	MODULE
	{
		name = Configure
		title = Chemical Plant
		slots = 2
		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 0
			}
		}
		SETUP
		{
			name = Water Electrolysis
			desc = #KERBALISM_WaterElectrolysis_desc//Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysis
			}
		}
		SETUP
		{
			name = Sabatier Process
			desc = #KERBALISM_SabatierProcess_desc//<b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Sabatier
			}
		}
		SETUP
		{
			name = Haber Process
			desc = #KERBALISM_HaberProcess_desc//Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Haber
			}
		}
		SETUP
		{
			name = Waste Incinerator
			desc = #KERBALISM_WasteIncinerator_desc//Produce <b>CarbonDioxide</b> and <b>Water</b> by combustion of <b>Waste</b> with <b>Oxygen</b>. Includes a small exhaust turbine generator. If needed <b>Water</b> will be vented to continue <b>CarbonDioxide</b> extraction.
			tech = precisionEngineering
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteIncinerator
			}
		}
		SETUP
		{
			name = Waste Compressor
			desc = #KERBALISM_WasteCompressor_desc//Compact <b>Waste</b> to the density of <b>shielding material</b>.
			tech = precisionEngineering
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteCompressor
			}
		}
		SETUP
		{
			name = Anthraquinone Process
			desc = #KERBALISM_AnthraquinoneProcess_desc//Synthesize <b>Oxidizer</b> using a redox of <b>Oxygen</b> and <b>Hydrogen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Anthraquinone
			}
		}
		SETUP
		{
			name = Hydrazine Production
			desc = #KERBALISM_HydrazineProduction_desc//<b>Oxidizer</b> and <b>Ammonia</b> react to produce <b>MonoPropellant</b>, <b>Oxygen</b> and <b>Water</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _HydrazineProduction
			}
		}
		SETUP
		{
			name = Hydrazine Production (N2 Injection)
			desc = #KERBALISM_HydrazineProductionN2_desc//<b>Oxidizer</b> and <b>Ammonia</b> with <b>Nitrogen</b> injection react to produce <b>MonoPropellant</b> and <b>Oxygen</b>.
			tech = experimentalScience
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _NitroHydrazine
			}
		}
		SETUP
		{
			name = Solid Oxide Electrolysis
			desc = #KERBALISM_SolidOxideElectrolysis_desc//Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
			tech = experimentalScience
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SOE
			}
		}
		SETUP
		{
			name = Molten Regolith Electrolysis
			desc = #KERBALISM_MoltenRegolithElectrolysis_desc//Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Ore</b>. If needed <b>CarbonDioxide</b> and/or <b>Shielding</b> will be vented in order to continue the <b>Oxygen</b> extraction.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MRE
			}
		}
		SETUP
		{
			name = Selective Catalytic Oxidation
			desc = #KERBALISM_SelectiveCatalyticOxidation_desc//<b>Ammonia</b> and <b>Oxygen</b> react with a hydrotalcite-like catalyst to produce <b>Nitrogen</b> and <b>Water</b>.
			tech = experimentalScience
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SCO
			}
		}
	}
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_ChemicalPlant_title//Chemical Plant
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}

// Load RR-specific chains into all recognized Convert-O-Trons
@PART[kerbalism-chemicalplant,MiniISRU,ISRU,rr_boxblue_long,rr_boxblue]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
	MODULE
	{
		name = ProcessController
		resource = _MRER
		title = Molten Regolith Electrolysis (Rock)
		Tag = Sabe
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _AmmoniaBrew
		title = Ammonia Brewer
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _AmmoniaToMono
		title = Ammonia to MonoPropellant
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _CarbonExtractor
		title = Carbon Extractor
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _CarbonFuser
		title = Carbon Fuser
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _GlykerolBrew
		title = Glykerol Brewer
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _LeadExtractor
		title = KH Lead Extractor
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterAl2O3
		title = Alumina Splitter
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterCO2
		title = Carbon Dioxide Splitter
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterH2O
		title = Water Splitter
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterHydrates
		title = Hydrates Splitter
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterMona
		title = Monazite Splitter
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterSpod
		title = Spodumene Splitter
		Tag = RR
		capacity = 1
	}

	@MODULE[Configure]
	{
		SETUP
		{
			name = Molten Regolith Electrolysis (Rock)
			desc = Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Rock</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MRER
			}
		}
		SETUP
		{
			name = Ammonia Brewer
			desc = Produce <b>LqdAmmonia</b> from <b>LqdHydrogen</b> and <b>LqdNitrogen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _AmmoniaBrew
			}
		}
		SETUP
		{
			name = Ammonia to MonoPropellant
			desc = Convert <b>LqdAmmonia</b> into <b>MonoPropellant</b> and <b>LqdHydrogen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _AmmoniaToMono
			}
		}
		SETUP
		{
			name = Carbon Extractor
			desc = Extract pure <b>Carbon</b> out of <b>Ore</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _CarbonExtractor
			}
		}
		SETUP
		{
			name = Carbon Fuser
			desc = Fuse <b>Carbon</b> and <b>Oxygen</b> into <b>CarbonDioxide</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _CarbonFuser
			}
		}
		SETUP
		{
			name = Glykerol Brewer
			desc = Create <b>Glykerol</b> from <b>Water</b> and <b>Carbon</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _GlykerolBrew
			}
		}
		// SETUP
		// {
			// name = Lead Extractor
			// desc = Extract <b>Lead</b> from <b>MetalOre</b>, primarily for use by KerbalHealth.
			// tech = advScienceTech
			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _LeadExtractor
			// }
		// }
		// SETUP
		// {
			// name = Splitter (Alumina)
			// desc = Extract <b>Metal</b> and <b>Oxygen</b> out of <b>Alumina</b>.
			// tech = advScienceTech
			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _SplitterAl2O3
			// }
		// }
		SETUP
		{
			name =  Splitter (CarbonDioxide)
			desc = Extract <b>Carbon</b> and <b>Oxygen</b> out of <b>CarbonDioxide</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterCO2
			}
		}
		// SETUP
		// {
			// name = Splitter (Hydrates)
			// desc = Extract <b>ArgonGas</b>, <b>MetalOre</b>, <b>Oxygen</b>, <b>Water</b> and <b>XenonGas</b> out of <b>Hydrates</b>.
			// tech = advScienceTech
			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _SplitterHydrates
			// }
		// }
		SETUP
		{
			name = Splitter (Monazite)
			desc = Extract <b>Phosphorus</b>, <b>Oxygen</b> and <b>RareMetals</b> out of <b>Monazite</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterMona
			}
		}
		// SETUP
		// {
			// name = Splitter (Spodumene)
			// desc = Extract <b>Lithium</b>, <b>Metal</b> and <b>Silicates</b> out of <b>Spodumene</b>.
			// tech = advScienceTech
			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _SplitterSpod
			// }
		// }
		SETUP
		{
			name = Splitter (Water)
			desc = Extract <b>Hydrogen</b> and <b>Oxygen</b> out of <b>Water</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterH2O
			}
		}
	}
}

// Load Boxed Compressor/Freezer
@PART[rr_boxblue_flat]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _FreezeCH4
		title = Methane Freezer
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeCO2
		title = CarbonDioxide Freezer
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeD
		title = Deuterium Freezer
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeH2
		title = Hydrogen Freezer
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeN2
		title = Nitrogen Freezer
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeNH3
		title = Ammonia Freezer
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _FreezeO2
		title = Oxygen Freezer
		Tag = RR
		capacity = 1
	}
	
	MODULE
	{
		name = Configure
		title = Flash Freezer
		slots = 1
		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 0
			}
		}
		
		SETUP
		{
			name = Ammonia Freezer
			desc = Freeze <b>Ammonia</b> into <b>LqdAmmonia</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeNH3
			}
		}
		SETUP
		{
			name = Carbon Dioxide Freezer
			desc = Freeze <b>CarbonDioxide</b> into <b>LqdCO2</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeCO2
			}
		}
		SETUP
		{
			name = Deuterium Freezer
			desc = Freeze <b>Deuterium</b> into <b>LqdDeuterium</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeD
			}
		}
		SETUP
		{
			name = Hydrogen Freezer
			desc = Freeze <b>Hydrogen</b> into <b>LqdHydrogen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeH2
			}
		}
		SETUP
		{
			name = Methane Freezer
			desc = Freeze <b>Methane</b> into <b>LqdMethane</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeCH4
			}
		}
		SETUP
		{
			name = Nitrogen Freezer
			desc = Freeze <b>Nitrogen</b> into <b>LqdNitrogen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeN2
			}
		}
		SETUP
		{
			name = Oxygen Freezer
			desc = Freeze <b>Oxygen</b> into <b>LqdOxygen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FreezeO2
			}
		}
	}
}

// Load Boxed Decompressor/Heater
@PART[rr_boxred_flat]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _ThawCH4
		title = Methane Heater
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawCO2
		title = CarbonDioxide Heater
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawH2
		title = Hydrogen Heater
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawN2
		title = Nitrogen Heater
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawNH3
		title = Ammonia Heater
		Tag = RR
		capacity = 1
	}
	MODULE
	{
		name = ProcessController
		resource = _ThawO2
		title = Oxygen Heater
		Tag = RR
		capacity = 1
	}
	
	MODULE
	{
		name = Configure
		title = Quick Heater
		slots = 1
		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 0
			}
		}
		SETUP
		{
			name = Ammonia Heater
			desc = Thaw <b>LqdAmmonia</b> into <b>Ammonia</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawNH3
			}
		}
		SETUP
		{
			name = Carbon Dioxide Heater
			desc = Thaw <b>LqdCO2</b> into <b>CarbonDioxide</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawCO2
			}
		}
		SETUP
		{
			name = Hydrogen Heater
			desc = Thaw <b>LqdHydrogen</b> into <b>Hydrogen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawH2
			}
		}
		SETUP
		{
			name = Methane Heater
			desc = Thaw <b>LqdMethane</b> into <b>Methane</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawCH4
			}
		}
		SETUP
		{
			name = Nitrogen Heater
			desc = Thaw <b>LqdNitrogen</b> into <b>Nitrogen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawN2
			}
		}
		SETUP
		{
			name = Oxygen Heater
			desc = Thaw <b>LqdOxygen</b> into <b>Oxygen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ThawO2
			}
		}
	}
}

// Scale capacities of installed modules
@PART[MiniISRU]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	@MODULE[ProcessController]:HAS[#Tag[RR]],*
	{
		@capacity *= 0.4 // 36.0 on Kerbalism's own capacity scale
	}
	@MODULE[ProcessController]:HAS[#Tag[Sabe]],*
	{
		@capacity *= 36
	}
}
@PART[ISRU]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	@MODULE[ProcessController]:HAS[#Tag[Sabe]],*
	{
		@capacity *= 90
	}
	// @MODULE[ProcessController]:HAS[#Tag[RR]],*
	// {
		// @capacity *= 1 // 90.0 on Kerbalism's own capacity scale; don't need to touch this
	// }
}
@PART[kerbalism-chemicalplant]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	@MODULE[ProcessController]:HAS[#Tag[RR]],*
	{
		@capacity *= 0.05 // 2.0 on Kerbalism's own capacity scale
	}
	@MODULE[ProcessController]:HAS[#Tag[Sabe]],*
	{
		@capacity *= 2
	}
}
@PART[rr_boxblue_long]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	@MODULE[ProcessController]:HAS[~Tag[*]],*
	{
		@capacity *= 90
	}
	@MODULE[ProcessController]:HAS[#Tag[Sabe]],*
	{
		@capacity *= 90
	}
	// @MODULE[ProcessController]:HAS[#Tag[RR]],*
	// {
		// @capacity *= 1
	// }
}
@PART[rr_boxblue]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	@MODULE[ProcessController]:HAS[#Tag[Sabe]],*
	{
		@capacity *= 54 // 0.6x the stock ISRU using Kerbalism's own capacity scale
	}
	@MODULE[ProcessController]:HAS[~Tag[*]],*
	{
		@capacity *= 54 // 0.6x the stock ISRU using Kerbalism's own capacity scale
	}
	@MODULE[ProcessController]:HAS[#Tag[RR]],*
	{
		@capacity *= 0.6
	}
	@MODULE[Configure]:HAS[#title[Chemical?Plant]]
	{
		%slots = 1
	}
}