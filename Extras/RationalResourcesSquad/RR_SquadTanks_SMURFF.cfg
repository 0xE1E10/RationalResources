@PART:HAS[#refType[LFO],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RRStockSwitch]]]:NEEDS[SMURFF]:AFTER[RationalResourcesSquad]
{
	%reservedmass:NEEDS[SMURFF] = 0
	%initialmass:NEEDS[SMURFF] = #$mass$
	%MODULE[ModuleSMURFF]{}
	
	%resourcemass = #$refVolume$
	@resourcemass *= #$@RESOURCE_DEFINITION[LiquidFuel]/density$ //In case the density changes -- it shouldn't, but why tempt fate?
	%resourcemass2 = #$resourcemass$
	
	@resourcemass *= #$@SMURFFCONFIG/lfomassfactor$
	@mass -= #$resourcemass$
	
	@resourcemass2 *= #$@SMURFFCONFIG/lforeservefactor$
	@reservedmass += #$resourcemass2$
	-resourcemass = delete
	-resourcemass2 = delete
}

@PART:HAS[#refType[Mono],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RRStockSwitch]]]:NEEDS[SMURFF]:AFTER[RationalResourcesSquad]
{
	%reservedmass:NEEDS[SMURFF] = 0
	%initialmass:NEEDS[SMURFF] = #$mass$
	%MODULE[ModuleSMURFF]{}
	
	%resourcemass = #$refVolume$
	@resourcemass *= #$@RESOURCE_DEFINITION[MonoPropellant]/density$ //In case the density changes -- it shouldn't, but why tempt fate?
	%resourcemass2 = #$resourcemass$
	
	@resourcemass *= #$@SMURFFCONFIG/monomassfactor$
	@mass -= #$resourcemass$
	
	@resourcemass2 *= #$@SMURFFCONFIG/monoreservefactor$
	@reservedmass += #$resourcemass2$
	-resourcemass = delete
	-resourcemass2 = delete
}